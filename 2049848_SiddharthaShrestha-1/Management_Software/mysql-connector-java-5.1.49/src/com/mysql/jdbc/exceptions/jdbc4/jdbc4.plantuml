@startuml

title __JDBC4's Class Diagram__\n

  namespace com.mysql.jdbc {
    namespace exceptions {
      namespace jdbc4 {
        class com.mysql.jdbc.exceptions.jdbc4.CommunicationsException {
            {static} ~ serialVersionUID : long
            - exceptionMessage : String
            + CommunicationsException()
            + getMessage()
            + getSQLState()
            + setWasStreamingResults()
        }
      }
    }
  }
  

  namespace com.mysql.jdbc {
    namespace exceptions {
      namespace jdbc4 {
        class com.mysql.jdbc.exceptions.jdbc4.MySQLDataException {
            {static} ~ serialVersionUID : long
            + MySQLDataException()
            + MySQLDataException()
            + MySQLDataException()
            + MySQLDataException()
        }
      }
    }
  }
  

  namespace com.mysql.jdbc {
    namespace exceptions {
      namespace jdbc4 {
        class com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException {
            {static} ~ serialVersionUID : long
            + MySQLIntegrityConstraintViolationException()
            + MySQLIntegrityConstraintViolationException()
            + MySQLIntegrityConstraintViolationException()
            + MySQLIntegrityConstraintViolationException()
        }
      }
    }
  }
  

  namespace com.mysql.jdbc {
    namespace exceptions {
      namespace jdbc4 {
        class com.mysql.jdbc.exceptions.jdbc4.MySQLInvalidAuthorizationSpecException {
            {static} ~ serialVersionUID : long
            + MySQLInvalidAuthorizationSpecException()
            + MySQLInvalidAuthorizationSpecException()
            + MySQLInvalidAuthorizationSpecException()
            + MySQLInvalidAuthorizationSpecException()
        }
      }
    }
  }
  

  namespace com.mysql.jdbc {
    namespace exceptions {
      namespace jdbc4 {
        class com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException {
            {static} ~ serialVersionUID : long
            + MySQLNonTransientConnectionException()
            + MySQLNonTransientConnectionException()
            + MySQLNonTransientConnectionException()
            + MySQLNonTransientConnectionException()
        }
      }
    }
  }
  

  namespace com.mysql.jdbc {
    namespace exceptions {
      namespace jdbc4 {
        class com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientException {
            {static} ~ serialVersionUID : long
            + MySQLNonTransientException()
            + MySQLNonTransientException()
            + MySQLNonTransientException()
            + MySQLNonTransientException()
        }
      }
    }
  }
  

  namespace com.mysql.jdbc {
    namespace exceptions {
      namespace jdbc4 {
        class com.mysql.jdbc.exceptions.jdbc4.MySQLQueryInterruptedException {
            {static} - serialVersionUID : long
            + MySQLQueryInterruptedException()
            + MySQLQueryInterruptedException()
            + MySQLQueryInterruptedException()
            + MySQLQueryInterruptedException()
        }
      }
    }
  }
  

  namespace com.mysql.jdbc {
    namespace exceptions {
      namespace jdbc4 {
        class com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException {
            {static} ~ serialVersionUID : long
            + MySQLSyntaxErrorException()
            + MySQLSyntaxErrorException()
            + MySQLSyntaxErrorException()
            + MySQLSyntaxErrorException()
        }
      }
    }
  }
  

  namespace com.mysql.jdbc {
    namespace exceptions {
      namespace jdbc4 {
        class com.mysql.jdbc.exceptions.jdbc4.MySQLTimeoutException {
            {static} ~ serialVersionUID : long
            + MySQLTimeoutException()
            + MySQLTimeoutException()
            + MySQLTimeoutException()
            + MySQLTimeoutException()
            + getErrorCode()
        }
      }
    }
  }
  

  namespace com.mysql.jdbc {
    namespace exceptions {
      namespace jdbc4 {
        class com.mysql.jdbc.exceptions.jdbc4.MySQLTransactionRollbackException {
            {static} ~ serialVersionUID : long
            + MySQLTransactionRollbackException()
            + MySQLTransactionRollbackException()
            + MySQLTransactionRollbackException()
            + MySQLTransactionRollbackException()
        }
      }
    }
  }
  

  namespace com.mysql.jdbc {
    namespace exceptions {
      namespace jdbc4 {
        class com.mysql.jdbc.exceptions.jdbc4.MySQLTransientConnectionException {
            {static} ~ serialVersionUID : long
            + MySQLTransientConnectionException()
            + MySQLTransientConnectionException()
            + MySQLTransientConnectionException()
            + MySQLTransientConnectionException()
        }
      }
    }
  }
  

  namespace com.mysql.jdbc {
    namespace exceptions {
      namespace jdbc4 {
        class com.mysql.jdbc.exceptions.jdbc4.MySQLTransientException {
            {static} ~ serialVersionUID : long
            + MySQLTransientException()
            + MySQLTransientException()
            + MySQLTransientException()
            + MySQLTransientException()
        }
      }
    }
  }
  

  com.mysql.jdbc.exceptions.jdbc4.CommunicationsException .up.|> StreamingNotifiable
  com.mysql.jdbc.exceptions.jdbc4.MySQLTransactionRollbackException .up.|> DeadlockTimeoutRollbackMarker


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml

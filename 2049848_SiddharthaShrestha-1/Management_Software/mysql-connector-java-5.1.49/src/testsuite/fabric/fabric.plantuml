@startuml

title __FABRIC's Class Diagram__\n

  namespace testsuite {
    namespace fabric {
      abstract class testsuite.fabric.BaseFabricTestCase {
          # baseJdbcUrl : String
          # database : String
          # fabricPassword : String
          # fabricUrl : String
          # fabricUsername : String
          # globalHost : String
          # globalPort : String
          # hostname : String
          # isSetForFabricTest : boolean
          # password : String
          # port : int
          # portString : String
          # shard1Host : String
          # shard1Port : String
          # shard2Host : String
          # shard2Port : String
          # username : String
          + BaseFabricTestCase()
          # getNewDefaultDataSource()
      }
    }
  }
  

  namespace testsuite {
    namespace fabric {
      class testsuite.fabric.SetupFabricTestsuite {
          {static} + main()
      }
    }
  }
  

  namespace testsuite {
    namespace fabric {
      class testsuite.fabric.TestAdminCommands {
          - client : XmlRpcClient
          + TestAdminCommands()
          + setUp()
          + testCreateGroup()
      }
    }
  }
  

  namespace testsuite {
    namespace fabric {
      class testsuite.fabric.TestDumpCommands {
          {static} + serverHostnamePortSorter : Comparator<Server>
          - client : XmlRpcClient
          + TestDumpCommands()
          + setUp()
          + testDumpServersAll()
          + testDumpShardMapsAll()
      }
    }
  }
  

  namespace testsuite {
    namespace fabric {
      class testsuite.fabric.TestResultSetParser {
          ~ exampleServersResultSet : List<Map<String, ?>>
          + TestResultSetParser()
          + setUp()
          + testExampleData()
      }
    }
  }
  

  namespace testsuite {
    namespace fabric {
      class testsuite.fabric.TestShardMapping {
          + testBug82203()
          + testHashShardMappingKeyLookup()
          + testRangeShardMappingKeyLookup()
      }
    }
  }
  

  namespace testsuite {
    namespace fabric {
      class testsuite.fabric.TestShardMapping.TestBug82203RunnableMock {
          {static} - run : boolean
          - time : long
          + TestBug82203RunnableMock()
          + run()
          - makeKey()
      }
    }
  }
  

  namespace testsuite {
    namespace fabric {
      class testsuite.fabric.TestXmlRpcCore {
          + TestXmlRpcCore()
          + generateAuthHeaders()
          + testProtocol()
      }
    }
  }
  

  testsuite.fabric.TestShardMapping +-down- testsuite.fabric.TestShardMapping.TestBug82203RunnableMock
  testsuite.fabric.TestShardMapping.TestBug82203RunnableMock .up.|> Runnable


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
